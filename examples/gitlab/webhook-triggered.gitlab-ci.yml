# GitLab CI/CD Configuration for Claude Code Webhook Server Integration
# This configuration works with the webhook server from gitlab-app/
#
# The webhook server listens for GitLab Note Hook events and triggers
# pipelines when @claude is mentioned in issues or merge requests.
#
# IMPORTANT: This requires deploying the webhook server first.
# See gitlab-app/README.md for deployment instructions.

# Define the Claude Code job that will be triggered by webhooks
claude_webhook_handler:
  image: oven/bun:1.1.29-alpine
  stage: build
  before_script:
    # Install git for repository operations
    - apk add --no-cache git openssh-client

    # Clone Claude Code for GitLab
    - git clone https://github.com/RealMikeChong/claude-code-for-gitlab.git /tmp/claude-code
    - cd /tmp/claude-code
    - bun install --frozen-lockfile

    # Configure git
    - git config --global user.name "Claude Bot"
    - git config --global user.email "claude-bot@example.com"

    # Return to project directory
    - cd $CI_PROJECT_DIR
  script:
    # Parse webhook payload from environment
    - echo "Processing GitLab webhook event..."
    - echo "Event type: ${GITLAB_EVENT_TYPE}"

    # Run Claude Code action from cloned repository
    - cd /tmp/claude-code && bun run src/entrypoints/prepare.ts
  rules:
    # Only run when triggered by webhook with CLAUDE_TRIGGER variable
    - if: '$CLAUDE_TRIGGER == "true"'
  variables:
    # Authentication - Claude Code OAuth Token (recommended)
    CLAUDE_CODE_OAUTH_TOKEN: $CLAUDE_CODE_OAUTH_TOKEN

    # Or use traditional tokens:
    # GITLAB_TOKEN: $CLAUDE_GITLAB_TOKEN
    # ANTHROPIC_API_KEY: $CLAUDE_API_KEY

    # Claude configuration
    CLAUDE_TRIGGER_PHRASE: "@claude"
    CLAUDE_MODEL: "sonnet"

    # The webhook payload is passed as GITLAB_WEBHOOK_PAYLOAD
    # This is automatically set when using GitLab webhooks

# Webhook configuration for Claude Code GitLab webhook server
# This configuration works with the webhook server from gitlab-app/
#
# The webhook server automatically triggers pipelines when @claude is mentioned
# and sets the CLAUDE_TRIGGER=true variable along with other context variables:
# - CLAUDE_PROJECT_PATH: The project path (e.g., owner/repo)
# - CLAUDE_RESOURCE_TYPE: Either "issue" or "merge_request"
# - CLAUDE_RESOURCE_ID: The issue/MR IID
# - CLAUDE_BRANCH: The branch to work on
# - CLAUDE_AUTHOR: The user who mentioned @claude
# - CLAUDE_NOTE: The comment text
#
# To use this configuration:
# 1. Deploy the webhook server from gitlab-app/
# 2. Configure GitLab webhook to point to your webhook server URL
# 3. The webhook server will trigger this pipeline with proper variables

# Example job for testing webhook integration
test_webhook:
  image: alpine:latest
  stage: test
  script:
    - echo "Webhook payload:"
    - echo "$GITLAB_WEBHOOK_PAYLOAD" | base64 -d | head -n 20
    - echo "Event type: $GITLAB_EVENT_TYPE"
  rules:
    - if: '$CLAUDE_TRIGGER == "true"'
      when: manual

# Job to verify webhook server configuration
verify_webhook_config:
  image: alpine:latest
  stage: .pre
  before_script:
    - apk add --no-cache curl jq
  script:
    - echo "Verifying Claude webhook server configuration..."
    - echo "Required variables for webhook server:"
    - echo "- GITLAB_TOKEN or CLAUDE_GITLAB_TOKEN: GitLab Personal Access Token"
    - echo "- ANTHROPIC_API_KEY or CLAUDE_CODE_OAUTH_TOKEN: Claude API credentials"
    - echo ""
    - echo "Webhook server should be configured to:"
    - echo "1. Listen for GitLab webhooks on Note Hook events"
    - echo "2. Trigger pipelines when @claude is mentioned"
    - echo "3. Pass CLAUDE_TRIGGER=true and context variables"
    - echo ""
    - echo "Current CI variables:"
    - echo "- CI_PROJECT_ID: $CI_PROJECT_ID"
    - echo "- CI_PROJECT_PATH: $CI_PROJECT_PATH"
    - echo "- CI_API_V4_URL: $CI_API_V4_URL"
  rules:
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
      when: manual
