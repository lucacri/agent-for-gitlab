# Claude Code for GitLab - Remote Include Configuration
# Usage: Add this to your .gitlab-ci.yml:
# include:
#   - remote: 'https://raw.githubusercontent.com/RealMikeChong/claude-code-for-gitlab/main/examples/gitlab/include/claude-code.gitlab-ci.yml'

.claude_code_template:
  image: oven/bun:1.1.29-alpine
  stage: build
  before_script:
    # Install dependencies
    - apk add --no-cache git openssh-client curl

    # Clone Claude Code for GitLab
    - git clone https://github.com/RealMikeChong/claude-code-for-gitlab.git /tmp/claude-code
    - cd /tmp/claude-code
    - bun install --frozen-lockfile

    # Configure git
    - git config --global user.name "${CLAUDE_GIT_NAME:-Claude Assistant}"
    - git config --global user.email "${CLAUDE_GIT_EMAIL:-claude@assistant.ai}"

    # Return to project directory
    - cd $CI_PROJECT_DIR

  script:
    # Run Claude Code action
    - cd /tmp/claude-code && bun run src/entrypoints/prepare.ts

  variables:
    # Default Claude configuration
    CLAUDE_TRIGGER_PHRASE: ${CLAUDE_TRIGGER_PHRASE:-"@claude"}
    CLAUDE_MODEL: ${CLAUDE_MODEL:-"claude-3-5-sonnet-latest"}
    CLAUDE_BRANCH_PREFIX: ${CLAUDE_BRANCH_PREFIX:-"claude/"}
    BASE_BRANCH: ${BASE_BRANCH:-"main"}

# Job triggered by merge request comments
claude_mr_comment:
  extends: .claude_code_template
  rules:
    # Trigger when a comment contains the trigger phrase
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_EVENT_TYPE == "merge_request_note"'
      when: always
    # Skip draft MRs unless CLAUDE_PROCESS_DRAFTS is true
    - if: '$CI_MERGE_REQUEST_TITLE =~ /^(WIP|Draft):/ && $CLAUDE_PROCESS_DRAFTS != "true"'
      when: never

# Job triggered by issue comments (requires webhook)
claude_issue_comment:
  extends: .claude_code_template
  rules:
    # Trigger when webhook indicates issue comment
    - if: '$CI_PIPELINE_SOURCE == "trigger" && $TRIGGER_TYPE == "issue_comment"'
      when: always
  variables:
    # Create branch for issue
    CLAUDE_BRANCH: "${CLAUDE_BRANCH_PREFIX}issue-${CI_ISSUE_IID}"

# Manual trigger job
claude_manual:
  extends: .claude_code_template
  rules:
    # Allow manual pipeline triggers
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: manual
      allow_failure: true
  variables:
    # Use direct prompt from pipeline variables
    CLAUDE_DIRECT_PROMPT: ${CLAUDE_DIRECT_PROMPT}

# Self-hosted GitLab support
.claude_self_hosted:
  extends: .claude_code_template
  before_script:
    # Base before_script from template
    - !reference [.claude_code_template, before_script]

    # Additional setup for self-hosted
    - |
      if [ -n "$GITLAB_CA_CERT" ]; then
        echo "$GITLAB_CA_CERT" >> /etc/ssl/certs/ca-certificates.crt
        git config --global http.sslCAInfo /etc/ssl/certs/ca-certificates.crt
      fi
  variables:
    GITLAB_HOST: ${CI_SERVER_URL}

# Quick setup job to test configuration
claude_test_config:
  extends: .claude_code_template
  rules:
    - if: '$CLAUDE_TEST_CONFIG == "true"'
      when: manual
  script:
    - echo "Testing Claude Code configuration..."
    - echo "GitLab Host: ${CI_SERVER_URL}"
    - echo "Project: ${CI_PROJECT_PATH}"
    - echo "Trigger Phrase: ${CLAUDE_TRIGGER_PHRASE}"
    - echo "Model: ${CLAUDE_MODEL}"
    - |
      if [ -n "$CLAUDE_CODE_OAUTH_TOKEN" ]; then
        echo "Authentication: OAuth Token ✓"
      elif [ -n "$GITLAB_TOKEN" ] && [ -n "$ANTHROPIC_API_KEY" ]; then
        echo "Authentication: Traditional Tokens ✓"
      else
        echo "Authentication: ❌ Missing tokens"
        exit 1
      fi
