# Simplified GitLab CI/CD Configuration using unified entrypoint
# This configuration uses the new gitlab_entrypoint.ts that handles all phases

claude_webhook_handler:
  image: oven/bun:slim
  stage: build
  tags:
    - docker
  environment:
    name: claude-code
  before_script:
    # Install git for repository operations
    - apt-get update && apt-get install -y git openssh-client

    # Clone Claude Code for GitLab
    - git clone https://github.com/RealMikeChong/claude-code-for-gitlab.git /tmp/claude-code
    - cd /tmp/claude-code
    - bun install

    # Configure git
    - git config --global user.name "Claude Bot"
    - git config --global user.email "claude-bot@example.com"

    # Configure git credentials to use CLAUDE_CODE_GL_ACCESS_TOKEN as password
    - git config --global credential.helper store
    - |
      if [ -n "$CLAUDE_CODE_GL_ACCESS_TOKEN" ]; then
        echo "Configuring git credentials with CLAUDE_CODE_GL_ACCESS_TOKEN..."
        # Create credentials file for GitLab
        echo "https://gitlab-ci-token:${CLAUDE_CODE_GL_ACCESS_TOKEN}@${CI_SERVER_HOST}" >> ~/.git-credentials
        chmod 600 ~/.git-credentials
        # Set git to use the token for this project's remote URL
        git remote set-url origin "https://gitlab-ci-token:${CLAUDE_CODE_GL_ACCESS_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
      else
        echo "Warning: CLAUDE_CODE_GL_ACCESS_TOKEN not set!"
      fi

    # Return to project directory
    - cd $CI_PROJECT_DIR
  script: |
    # Parse webhook payload from environment
    echo "Processing GitLab webhook event..."
    echo "Event type: ${GITLAB_EVENT_TYPE}"
    echo "Processing Claude webhook trigger..."
    echo "Project: ${CLAUDE_PROJECT_PATH}"
    echo "Resource Type: ${CLAUDE_RESOURCE_TYPE}"
    echo "Resource ID: ${CLAUDE_RESOURCE_ID}"
    echo "Branch: ${CLAUDE_BRANCH}"
    echo "Author: ${CLAUDE_AUTHOR}"
    echo "Note: ${CLAUDE_NOTE}"

    # Run unified GitLab entrypoint
    cd /tmp/claude-code
    bun run src/entrypoints/gitlab_entrypoint.ts

  rules:
    # Only run when triggered by webhook with CLAUDE_TRIGGER variable
    - if: '$CLAUDE_TRIGGER == "true"'
  variables:
    # Authentication - Claude Code OAuth Token (recommended)
    CLAUDE_CODE_OAUTH_TOKEN: $CLAUDE_CODE_OAUTH_TOKEN

    # GitLab Personal Access Token (required for API operations)
    CLAUDE_CODE_GL_ACCESS_TOKEN: $CLAUDE_CODE_GL_ACCESS_TOKEN

    # Or use traditional tokens:
    # GITLAB_TOKEN: $CLAUDE_GITLAB_TOKEN
    # ANTHROPIC_API_KEY: $CLAUDE_API_KEY

    # Claude configuration
    CLAUDE_TRIGGER_PHRASE: "@claude"
    CLAUDE_MODEL: "sonnet"

    # Optional: Allowed tools (comma-separated)
    # ALLOWED_TOOLS: "Edit,Read,Write"

    # Optional: Max conversation turns
    # MAX_TURNS: "5"

    # The webhook payload is passed as GITLAB_WEBHOOK_PAYLOAD
    # This is automatically set when using GitLab webhooks
    GIT_CLEAN_FLAGS: -fdx
    GIT_STRATEGY: clone
    DOCKER_DRIVER: overlay2