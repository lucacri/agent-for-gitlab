# GitLab Configuration
GITLAB_URL=https://gitlab.com
GITLAB_TOKEN=glpat-xxxxxxxxxxxxxxxxxxxx

# Webhook Configuration
WEBHOOK_SECRET=your-webhook-secret-here

# Server Configuration
PORT=3000

# Redis Configuration
REDIS_URL=redis://redis:6379

# Rate Limiting Configuration
RATE_LIMITING_ENABLED=true # Set to false to disable rate limiting & Redis dependency
RATE_LIMIT_MAX=3
RATE_LIMIT_WINDOW=900

# Pipeline Configuration
CANCEL_OLD_PIPELINES=true

# Optional Admin Configuration
ADMIN_TOKEN=admin-secret-token

# Logging Configuration for Gitlab App
LOG_LEVEL=info  # Options: debug, info, warn, error
LOG_FORMAT=json # Options: json, pretty

# Branch Prefix
BRANCH_PREFIX=ai

TRIGGER_PHRASE=@AI # Always keep the @

OPENCODE_MODEL=azure/gpt-4.1

AI_GITLAB_USERNAME=bot.bot
AI_GITLAB_EMAIL=bot.bot@company.com

OPENCODE_AGENT_PROMPT="You are an assistant that fixes bugs and implements features in response to GitLab merge requests or issues.\nIf the user says 'Fix this' or 'Check this', assume they refer to the current MR/issue or comment (use the context tool to confirm).\nEnvironment: .NET SDK 8 and Node.js 24 are available.\nAfter significant code changes, run tests (stop after two failed attempts).\nAlways follow the project’s coding standards.\nThe user only sees your work if you post a comment in GitLab.\nFor long-running tasks, post progress updates as comments.\nAlways commit and push your changes after a task—if you fail to push, the task fails and work is lost.\nIf the user only asks for explanations, reply with detailed Markdown (GitLab-flavored) comments."
